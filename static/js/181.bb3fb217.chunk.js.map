{"version":3,"file":"static/js/181.bb3fb217.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/BeerEl/BeerEl.styled.jsx","components/BeerEl/BeerEl.jsx","components/Styled/OneBeerPage.styled.jsx","pages/OneBeer.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { GrCheckboxSelected, GrTrash } from 'react-icons/gr';\n\n\nexport const BeersRecipeBox = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 20px;\n  margin: 10px auto 30px 10px;\n  padding: 30px;\n`;\n\n\nexport const SelectStyled = styled(GrCheckboxSelected)`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  opacity: 0.3;\n  &.active {\n    opacity: 1;\n    transform: scale(1.02)\n  }\n`;\nexport const TrashStyled = styled(GrTrash)`\n  position: absolute;\n  top: 40px;\n  right: 16px;\n  opacity: 0.3;\n  &:hover {\n    animation: jelly 0.5s;\n  }\n`;\n\nexport const LinkStyled = styled(NavLink)`\n  cursor: pointer;\ncolor: white;\n  &:hover {\n    color: #6f0d00;\n  }\n`;\n\nexport const InfoWrapperStyled = styled.div`\n  position: absolute;\n  top: 24px;\n  right: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: center;\n  overflow: hidden;\n  width: calc(100% - 160px);\n  height: 160px;\n`;\n\nexport const ItemStyled = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: center;\n  border-radius: 8px;\n  padding: 274px  20px 20px 20px;\n  overflow: hidden;\n  background-color: white;\n  box-shadow: -2.5776965618133545px 6.873857021331787px 20.621572494506836px 0px\n    rgba(0, 0, 0, 0.23);\n  width: 100%;\n\n  &.active {\n    background-color: #e8ffb1;\n    transform: scale(1.02)\n  }\n`;\nexport const NameStyled = styled.h2`\n  color: #320e00ed;\n  font-size: 24px;\n  font-weight: 700;\n  text-transform: uppercase;\n`;\n\nexport const RectStyled = styled.div`\n  position: absolute;\n  top: 260px;\n  width: 100%;\n  height: 10px;\n  background-image: linear-gradient(\n    to bottom,\n    #ffb800 33%,\n    #ff7300 33%,\n    #ff7300 66%,\n    #711e00 66%\n  );\n`;\nexport const AvaThumbStyled = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 20px;\n  left: 26px;\n  width: 120px;\n  height: 228px;\n  flex-shrink: 0;\n  overflow: hidden;\n`;\n\nexport const ImgStyled = styled.img`\n  position: absolute;\n  top: 5px;\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n`;\n\nexport const InfoTextBeer = styled.p`\n  color: #320e00ed;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const InfoTextBeerDescr = styled.p`\n  color: #320e00ed;\n  font-size: 14px;\n  font-weight: 500;\n  display: block;\n  height: 50px;\n\n`;\n\nexport const BoldText = styled.span`\n  font-weight: 700;\n  font-size: 16px;\n  color: #320e00ed;\n`;\n\nexport const Subtitle = styled.h3`\n  font-weight: 700;\n  font-size: 16px;\n  color: #320e00ed;\n  align-self: flex-start;\n`;\n\nexport const ReadMoreBtnStyled = styled.div`\n  width: 120px;\n  padding: 8px;\n  gap: 6px;\n  border-radius: 4px;\n  background: #ff7300;\n  box-shadow: 0px 3.4369285106658936px 3.4369285106658936px 0px\n    rgba(0, 0, 0, 0.25);\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: 0.02em;\n  &:hover {\n    background: #ea4f01;\n  }\n`;\n\nexport const RecipeWrapperStyled = styled.div`\n  align-self: flex-start;\n  width: 100%;\n  table {\n        width: 100%;\n        border-collapse: collapse;\n\n        th,\n        td {\n            padding: 8px;\n            border-bottom: 1px solid #e3bdaa;\n            color: #333;\n            font-weight: 500;\n        }\n\n        th {\n            text-align: left;\n            font-weight: 600;\n        }\n\n        tbody tr:hover {\n            background-color: #fff5ca;\n        }\n    }\n`;\n","import React, { useEffect, useRef } from 'react';\n\nimport { nanoid } from 'nanoid';\n\nimport {\n  BeersRecipeBox,\n  ImgStyled,\n  ItemStyled,\n  RectStyled,\n  AvaThumbStyled,\n  NameStyled,\n  InfoTextBeer,\n  LinkStyled,\n  InfoWrapperStyled,\n  BoldText,\n  InfoTextBeerDescr,\n  Subtitle,\n  RecipeWrapperStyled,\n} from './BeerEl.styled';\nimport { Scrollbars } from 'rc-scrollbars';\nimport useStore from '../../zustand/store';\n\nexport const BeerEl = (id, location) => {\n  const fetchOneBeerData = useStore(state => state.fetchOneBeerData);\n  const oneBeer = useStore(state => state.oneBeer);\n  const backLinkLocationRef = useRef(location?.state?.from ?? '/');\n  const handleBackClick = () => {\n    useStore.setState(state => ({oneBeer: {}}));\n  };\n  useEffect(() => {\n    fetchOneBeerData(id);\n  }, [fetchOneBeerData, id]);\n\n  const {\n    name,\n    image_url,\n    description,\n    tagline,\n    first_brewed,\n    ingredients,\n    food_pairing,\n    brewers_tips,\n    contributed_by,\n  } = oneBeer;\n  const handleImageError = e => {\n    e.target.src =\n      'https://res.cloudinary.com/dj5smkin6/image/upload/v1689348096/BeerLogo_gych6g.jpg';\n  };\n\n  return (\n    <BeersRecipeBox>\n      <LinkStyled to={backLinkLocationRef.current} onClick={handleBackClick}>\n        &#8592; Go back\n      </LinkStyled>\n      <ItemStyled>\n        <RectStyled></RectStyled>\n        <AvaThumbStyled>\n          <ImgStyled src={image_url} alt={name} onError={handleImageError} />\n        </AvaThumbStyled>\n        <InfoWrapperStyled>\n          <NameStyled>{name}</NameStyled>\n          <BoldText>{tagline}</BoldText>\n          <InfoTextBeer>\n            <BoldText>first brewed: </BoldText> {first_brewed}\n          </InfoTextBeer>\n          <Scrollbars style={{ width: '100%', height: 80 }}>\n            <InfoTextBeerDescr>{description}</InfoTextBeerDescr>\n          </Scrollbars>\n        </InfoWrapperStyled>\n        <RecipeWrapperStyled>\n          <Subtitle>Ingredients :</Subtitle>\n          <div>\n            <h4>Malt</h4>\n            <table>\n              <thead>\n                <tr>\n                  <th>Ingredient</th>\n                  <th>Amount</th>\n                </tr>\n              </thead>\n              <tbody>\n                {ingredients?.malt?.map(malt => (\n                  <tr key={nanoid()}>\n                    <td>{malt.name}</td>\n                    <td>\n                      {malt.amount.value}\n                      {malt.amount.unit}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div>\n            <h4>Hops</h4>\n            <table>\n              <thead>\n                <tr>\n                  <th>Ingredient</th>\n                  <th>Amount</th>\n                  <th>Add</th>\n                  <th>Attribute</th>\n                </tr>\n              </thead>\n              <tbody>\n                {ingredients?.hops?.map(hops => (\n                  <tr key={nanoid()}>\n                    <td>{hops.name}</td>\n                    <td>\n                      {hops.amount.value}\n                      {hops.amount.unit}\n                    </td>\n                    <td>{hops.add}</td>\n                    <td>{hops.attribute}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <h4>food_pairing:</h4>\n            <table>\n              <tbody>\n                {food_pairing?.map(food => (\n                  <tr key={nanoid()}>\n                    <td>{food}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </RecipeWrapperStyled>\n        <InfoTextBeer>\n          <BoldText>Brewers tips: </BoldText> {brewers_tips}\n        </InfoTextBeer>\n        <InfoTextBeer>\n          <BoldText>Contributed by: </BoldText> {contributed_by}\n        </InfoTextBeer>\n      </ItemStyled>\n    </BeersRecipeBox>\n  );\n};\n","import styled from '@emotion/styled';\n\n\nexport const OneBeerStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 55px;\n\n`;\n","\n\n\nimport { BeerEl } from 'components/BeerEl/BeerEl';\nimport { OneBeerStyled } from 'components/Styled/OneBeerPage.styled';\n\nconst Tweets = () => {\n  return (\n    <OneBeerStyled>\n      \n      <BeerEl />\n\n    </OneBeerStyled>\n  );\n};\n\nexport default Tweets;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","BeersRecipeBox","styled","LinkStyled","GrCheckboxSelected","GrTrash","NavLink","InfoWrapperStyled","ItemStyled","NameStyled","RectStyled","AvaThumbStyled","ImgStyled","InfoTextBeer","InfoTextBeerDescr","BoldText","Subtitle","RecipeWrapperStyled","BeerEl","location","fetchOneBeerData","useStore","state","oneBeer","backLinkLocationRef","useRef","from","useEffect","name","image_url","description","tagline","first_brewed","ingredients","food_pairing","brewers_tips","contributed_by","to","current","onClick","src","alt","onError","e","target","style","width","height","malt","map","amount","value","unit","hops","add","attribute","food","OneBeerStyled"],"sourceRoot":""}